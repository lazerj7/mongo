if: branch = v3.6
language: cpp
os: linux
dist: focal
cache:
  directories:
    - $TRAVIS_BUILD_DIR/build
stages:
  - clean_cache
  - compile_mongo
  - compile_mongos
  - compile_mongod
  - compile_rest
  #- test
jobs:
  include:
    - stage: clean_cache
      arch: arm64
      env: OS_ARCH=arm64
      install: skip
      script: rm -rf $TRAVIS_BUILD_DIR/build/*
    - stage: clean_cache
      arch: amd64
      env: OS_ARCH=amd64
      install: skip
      script: rm -rf $TRAVIS_BUILD_DIR/build/*
    - stage: compile_mongod
      arch: arm64
      env: OS_ARCH=arm64
      script: python2.7 buildscripts/scons.py -j8 mongod --disable-warnings-as-errors CCFLAGS=-march=armv8-a+crc
    - stage: compile_mongos
      arch: arm64
      env: OS_ARCH=arm64
      script: python2.7 buildscripts/scons.py -j8 mongos --disable-warnings-as-errors CCFLAGS=-march=armv8-a+crc
    - stage: compile_mongo
      arch: arm64
      env: OS_ARCH=arm64
      script: python2.7 buildscripts/scons.py -j8 mongo --disable-warnings-as-errors CCFLAGS=-march=armv8-a+crc
    - stage: compile_rest
      arch: arm64
      env: OS_ARCH=arm64
      script: python2.7 buildscripts/scons.py -j8 all --disable-warnings-as-errors CCFLAGS=-march=armv8-a+crc
#    - os: linux
#      arch: arm64
#      env: OS_TYPE=centos OS_VERSION=8 OS_ARCH=aarch64
    - stage: compile_mongod
      arch: amd64
      env: OS_ARCH=amd64
      script: python2.7 buildscripts/scons.py -j8 mongod --disable-warnings-as-errors
    - stage: compile_mongos
      arch: amd64
      env: OS_ARCH=amd64
      script: python2.7 buildscripts/scons.py -j8 mongos --disable-warnings-as-errors
    - stage: compile_mongo
      arch: amd64
      env: OS_ARCH=amd64
      script: python2.7 buildscripts/scons.py -j8 mongo --disable-warnings-as-errors
    - stage: compile_rest
      arch: amd64
      env: OS_ARCH=amd64
      after_script: python2.7 buildscripts/scons.py -j8 all --disable-warnings-as-errors
#    - stage: test
#      install: skip
#      script: skip
#    - os: linux
#      arch: amd64
#      env: OS_TYPE=centos OS_VERSION=8 OS_ARCH=x86_64
#services:
#  - docker
install:
  - sudo add-apt-repository universe
  - sudo apt update
  - sudo apt install build-essential
  - sudo apt install python2.7 libpython2.7-dev python-pip libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev
  - python2.7 -m pip install -r buildscripts/requirements.txt
#  - docker pull ${OS_TYPE}:${OS_VERSION}
#  - docker run -d -i --name ctr -v ${PWD}:/sources -v ${PWD}:/output:Z ${OS_TYPE}:${OS_VERSION} /bin/bash
#  - docker exec ctr dnf install -y gcc python27 boost-devel
#  - sudo apt update
#  - sudo apt install build-essential
#  - sudo apt install python2.7 libpython2.7-dev python-pip libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev
#  - docker exec ctr dnf groupinstall -y development-libs development-tools
#  - docker exec ctr python2.7 -m ensurepip && docker exec ctr python2.7 -m pip install -r /sources/buildscripts/requirements.txt
#  - python2.7 -m pip install -r buildscripts/requirements.txt
#script:
#  - docker exec ctr /bin/bash -c "cd /sources && python2.7 /sources/buildscripts/scons.py --prefix=/output core --disable-warnings-as-errors"
#  - python2.7 buildscripts/scons.py -j4 all --disable-warnings-as-errors
#after_success:
#  - docker exec ctr strip /output/bin/mongo
#  - docker exec ctr strip /output/bin/mongos
#  - docker exec ctr strip /output/binmongod
