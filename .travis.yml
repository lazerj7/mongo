if: branch = v3.6
language: cpp
jobs:
  include:
    - os: linux
      arch: arm64
      env: OS_TYPE=fedora OS_VERSION=33 OS_ARCH=aarch64
    - os: linux
      arch: arm64
      env: OS_TYPE=centos OS_VERSION=8 OS_ARCH=aarch64
    - os: linux
      arch: amd64
      env: OS_TYPE=fedora OS_VERSION=33 OS_ARCH=x86_64
    - os: linux
      arch: amd64
      env: OS_TYPE=centos OS_VERSION=8 OS_ARCH=x86_64
services:
  - docker
install:
#  - docker pull ${OS_TYPE}:${OS_VERSION}
#  - docker run -d -i --name ctr -v ${PWD}:/sources -v ${PWD}:/output:Z ${OS_TYPE}:${OS_VERSION} /bin/bash
#  - docker exec ctr dnf install -y gcc python27 boost-devel
  - sudo apt install build-essential
  - sudo apt install python2.7 libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev
#  - docker exec ctr dnf groupinstall -y development-libs development-tools
#  - docker exec ctr python2.7 -m ensurepip && docker exec ctr python2.7 -m pip install -r /sources/buildscripts/requirements.txt
  - python2.7 -m ensurepip
  - python2.7 -m pip install -r /buildscripts/requirements.txt
script:
#  - docker exec ctr /bin/bash -c "cd /sources && python2.7 /sources/buildscripts/scons.py --prefix=/output core --disable-warnings-as-errors"
  - python2.7 buildscripts/scons.py -j4 all --disable-warnings-as-errors
#after_success:
#  - docker exec ctr strip /output/bin/mongo
#  - docker exec ctr strip /output/bin/mongos
#  - docker exec ctr strip /output/binmongod
